name: CI

on: [push, pull_request]

jobs:
  lint:
    name: lint and style checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-docstrings flake8-debugger flake8-bugbear pytest
      - name: Install Satpy
        run: |
          pip install -e .
      - name: Run linting
        run: |
          flake8 satpy/

  website:
    name: build website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: "3.8"
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: Install Satpy
        shell: bash -l {0}
        run: |
          pip install sphinx sphinx_rtd_theme sphinxcontrib-apidoc; \
          pip install --no-deps -e .

      - name: Run Sphinx Build
        shell: bash -l {0}
        run: |
          cd doc; \
          make html SPHINXOPTS="-W"

  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    needs: [lint]
    strategy:
      fail-fast: true
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.7", "3.8"]
        experimental: [false]
        include:
          - python-version: "3.8"
            os: "ubuntu-latest"
            experimental: true

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
      UNSTABLE: ${{ matrix.experimental }}
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: continuous_integration/environment.yaml
          activate-environment: test-environment

      - name: Install unstable dependencies
        if: matrix.experimental == true
        shell: bash -l {0}
        run: |
          python -m pip install \
          --index-url https://pypi.anaconda.org/scipy-wheels-nightly/simple/ \
          --trusted-host pypi.anaconda.org \
          --no-deps --pre --upgrade \
          matplotlib \
          numpy \
          pandas \
          scipy; \
          python -m pip install \
          --no-deps --upgrade \
          git+https://github.com/dask/dask \
          git+https://github.com/dask/distributed \
          git+https://github.com/zarr-developers/zarr \
          git+https://github.com/Unidata/cftime \
          git+https://github.com/mapbox/rasterio \
          git+https://github.com/pydata/bottleneck \
          git+https://github.com/pydata/xarray;

      - name: Install satpy
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -e .

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest --cov=satpy satpy/tests --cov-report=xml --cov-report=

      - name: Upload unittest coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ./coverage.xml
          env_vars: OS,PYTHON_VERSION,UNSTABLE

      - name: Coveralls Parallel
        uses: AndreMiras/coveralls-python-action@develop
        with:
          flag-name: run-${{ matrix.test_number }}
          parallel: true
        if: runner.os == 'Linux'

      - name: Run behaviour tests
        shell: bash -l {0}
        run: |
          coverage run --source=satpy -m behave satpy/tests/features --tags=-download
          coverage xml

      - name: Upload behaviour test coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: behaviourtests
          file: ./coverage.xml
          env_vars: OS,PYTHON_VERSION,UNSTABLE

  coveralls:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true

