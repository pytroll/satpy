sensor_name: visir/abi

modifiers:
  rayleigh_corrected_crefl:
    compositor: !!python/name:satpy.composites.viirs.ReflectanceCorrector
    dem_filename: CMGDEM.hdf
    optional_prerequisites:
    - name: satellite_azimuth_angle
    - name: satellite_zenith_angle
    - name: solar_azimuth_angle
    - name: solar_zenith_angle

  rayleigh_corrected_500m:
    compositor: !!python/name:satpy.composites.PSPRayleighReflectance
    atmosphere: midlatitude summer
    aerosol_type: marine_tropical_aerosol
    prerequisites:
    - name: C02
      modifiers: [effective_solar_pathlength_corrected]
    optional_prerequisites:
    - satellite_azimuth_angle
    - satellite_zenith_angle
    - solar_azimuth_angle
    - solar_zenith_angle

composites:
  green_crefl:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: C03
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    standard_name: toa_bidirectional_reflectance

  green_raw:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    standard_name: toa_bidirectional_reflectance

  green:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    standard_name: toa_bidirectional_reflectance

  green_nocorr:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
    - name: C02
    - name: C03
    standard_name: toa_reflectance

  true_color_crefl:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: green_crefl
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    standard_name: true_color

  true_color_raw:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected]
    - name: green_raw
    - name: C01
      modifiers: [sunz_corrected]
    standard_name: true_color

  true_color:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: green
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected]
    standard_name: true_color

  true_color_nocorr:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
    - name: green_nocorr
    - name: C01
    standard_name: true_color

  natural_color:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    high_resolution_band: blue
    standard_name: natural_color

  natural_color_nocorr:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
    - name: C03
    - name: C02
    high_resolution_band: blue
    standard_name: natural_color

  natural_color_raw:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C05
    - name: C03
    - name: C02
    standard_name: natural_color

  overview:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    - C14
    standard_name: overview

  overview_raw:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - C02
    - C03
    - C14
    standard_name: overview

  colorized_ir_clouds:
    compositor: !!python/name:satpy.composites.SingleBandCompositor
    prerequisites:
      - name: C13
    standard_name: colorized_ir_clouds

  airmass:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
      - name: C08
      - name: C10
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C12
        - name: C13
    - name: C08
    standard_name: airmass

  # CIMSS True Color Composites
  cimss_green_sunz_rayleigh:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    fractions: [0.45, 0.45, 0.1]
    prerequisites:
      # should we be using the most corrected or least corrected inputs?
      - name: C01
        modifiers: [sunz_corrected, rayleigh_corrected]
      - name: C02
        modifiers: [sunz_corrected, rayleigh_corrected]
      - name: C03
        modifiers: [sunz_corrected]
    standard_name: toa_bidirection_reflectance

  cimss_green_sunz:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    fractions: [0.45, 0.45, 0.1]
    prerequisites:
      # should we be using the most corrected or least corrected inputs?
      - name: C01
        modifiers: [sunz_corrected]
      - name: C02
        modifiers: [sunz_corrected]
      - name: C03
        modifiers: [sunz_corrected]
    standard_name: toa_bidirection_reflectance

  cimss_green:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    fractions: [0.45, 0.45, 0.1]
    prerequisites:
      # should we be using the most corrected or least corrected inputs?
      - name: C01
      - name: C02
      - name: C03
    standard_name: toa_bidirection_reflectance

  cimss_true_color_sunz_rayleigh:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    description: >
      CIMSS Natural (True) Color RGB. This version has been adjusted for the
      cosine of the solar zenith angle and has had rayleigh correction applied.
      This RGB is ratio sharpened by comparing a high resolution C02 (red)
      band with a lower/averaged version of itself and applying that ratio to
      the green and blue channels.
    references:
      Research Article: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2018EA000379
    prerequisites:
      - name: C02
        modifiers: [sunz_corrected, rayleigh_corrected]
      - name: cimss_green_sunz_rayleigh
      - name: C01
        modifiers: [sunz_corrected, rayleigh_corrected]
    standard_name: cimss_true_color

  cimss_true_color_sunz:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    description: >
      CIMSS Natural (True) Color RGB. This version has been adjusted for the
      cosine of the solar zenith angle.
      This RGB is ratio sharpened by comparing a high resolution C02 (red)
      band with a lower/averaged version of itself and applying that ratio to
      the green and blue channels.
    references:
      Research Article: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2018EA000379
    prerequisites:
      - name: C02
        modifiers: [sunz_corrected]
      - name: cimss_green_sunz
      - name: C01
        modifiers: [sunz_corrected]
    standard_name: cimss_true_color

  cimss_true_color:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    description: >
      CIMSS Natural (True) Color RGB. No solar zenith angle or atmospheric
      corrections are applied to this composite.
      This RGB is ratio sharpened by comparing a high resolution C02 (red)
      band with a lower/averaged version of itself and applying that ratio to
      the green and blue channels.
    references:
      Research Article: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2018EA000379
    prerequisites:
      - name: C02
      - name: cimss_green
      - name: C01
    standard_name: cimss_true_color

  true_color_with_night_ir:
    compositor: !!python/name:satpy.composites.DayNightCompositor
    standard_name: true_color_with_night_ir
    lim_low: 90.0
    lim_high: 100.0
    prerequisites:
      - true_color
      - night_ir_with_background

  true_color_with_night_ir_hires:
    compositor: !!python/name:satpy.composites.DayNightCompositor
    standard_name: true_color_with_night_ir_hires
    lim_low: 90.0
    lim_high: 100.0
    prerequisites:
      - true_color
      - night_ir_with_background_hires

  night_ir_alpha:
    compositor: !!python/name:satpy.composites.GenericCompositor
    standard_name: night_ir_alpha
    prerequisites:
      - 3.90
      - 10.3
      - 12.3
      - 10.3

  night_ir_with_background:
    compositor: !!python/name:satpy.composites.BackgroundCompositor
    standard_name: night_ir_with_background
    prerequisites:
      - night_ir_alpha
      - _night_background

  night_ir_with_background_hires:
    compositor: !!python/name:satpy.composites.BackgroundCompositor
    standard_name: night_ir_with_background_hires
    prerequisites:
      - night_ir_alpha
      - _night_background_hires
